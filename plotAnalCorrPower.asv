function power = plotAnalCorrPower(r,alphas,tail,Nmax)
% USAGE: power = plotAnalCorrPower(r)
% output
%   power [length(alphas),length(Ns)]
% input 
%   rho expected correlation
% make a plot of power vs. sample size
% using the analytical power calculation for a correlation analysis
% show results for different criteria and tails
% 07/01/2016 Julien Dubois from scratch
dbstop if error

% expected correlation
if nargin<1
    r = 0.4;
end
if nargin<2
    % criterion for significance
    alphas = [0.05 0.01 0.001];
end
if nargin<3
    tail = 'right'; % may be both
end
if nargin<4
    % sample sizes
    Nmax = 200;
end
c = {'k','m','r'}; % corresponding colors for plotting


Ns = 5:Nmax;

% DO THE WORK
fprintf('Computing power at all sample sizes\n');
tic
power = zeros(length(alphas),length(Ns));
    fprintf('\t\t tail = %s\n',tail);
    for ialpha = 1:length(alphas)
        alpha = alphas(ialpha);
        fprintf('\t alpha = %0.3f\n',alpha);
        power(ialpha,itail,:) = analCorrPower(r,alpha,Ns,tail);
    end
end
elapsed = toc;
fprintf('done in %.1fs\n',elapsed);

% plot result
figure;hold on;
cell4legend = cell(1,1);
for itail = 1:length(tails),
    for ialpha = 1:length(alphas)
        plot(Ns,squeeze(power(ialpha,itail,:)),[c{ialpha},s{itail}]);
        cell4legend{(itail-1)*length(alphas)+ialpha} = sprintf('\\alpha = %.3f (%s)',alphas(ialpha),tails{itail});
    end
end
legend(cell4legend,'Location','SouthEast');
ylabel('Statistical Power (analytical)');
xlabel('Sample size');
title(sprintf('Expected effect size: r = %.3f',r)); 

targetPower = .99;
plot([Ns(1),Ns(end)],targetPower*ones(1,2),'k--')
for ialpha=1:length(alphas)
    for itail=1:length(tails)
        [~,indmini] = min(abs(power(ialpha,itail,:)-targetPower));
        fprintf('alpha=%.3f (%s): N for power=%.2f is %d\n',alphas(ialpha),tails{itail},targetPower,Ns(indmini));
        plot(Ns(indmini)*ones(1,2),[0,1],[c{ialpha},':']);
    end
end
keyboard
 
